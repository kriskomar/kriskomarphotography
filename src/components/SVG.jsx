import React from 'react'
import PropTypes from 'prop-types'
import styled from 'styled-components'
import tw from 'tailwind.macro'
import { width as twWidth } from '../../tailwind'
import { hidden } from '../styles/utils'

const Wrapper = styled.svg`
  ${tw`absolute`};
  stroke: currentColor;
  ${props => props.hiddenMobile && hidden};
  color: ${props => props.stroke};
  width: ${props => props.svgWidth};
  fill: ${props => props.fill};
  left: ${props => props.left};
  top: ${props => props.top};
`
const icons = {
  camera2: {
    shape: (
      <g id="camera">
        <path clipRule="evenodd" d="M16,10.001c-4.419,0-8,3.581-8,8c0,4.418,3.581,8,8,8   c4.418,0,8-3.582,8-8C24,13.583,20.418,10.001,16,10.001z M20.555,21.906c-2.156,2.516-5.943,2.807-8.459,0.65   c-2.517-2.156-2.807-5.944-0.65-8.459c2.155-2.517,5.943-2.807,8.459-0.65C22.42,15.602,22.711,19.391,20.555,21.906z" fill="#333333" fillRule="evenodd" />
        <path clipRule="evenodd" d="M16,14.001c-2.209,0-3.999,1.791-4,3.999v0.002   c0,0.275,0.224,0.5,0.5,0.5s0.5-0.225,0.5-0.5V18c0.001-1.656,1.343-2.999,3-2.999c0.276,0,0.5-0.224,0.5-0.5   S16.276,14.001,16,14.001z" fill="#333333" fillRule="evenodd" />
        <path clipRule="evenodd" d="M29.492,9.042l-4.334-0.723l-1.373-3.434   C23.326,3.74,22.232,3,21,3H11C9.768,3,8.674,3.74,8.214,4.886L6.842,8.319L2.509,9.042C1.055,9.283,0,10.527,0,12v15   c0,1.654,1.346,3,3,3h26c1.654,0,3-1.346,3-3V12C32,10.527,30.945,9.283,29.492,9.042z M30,27c0,0.553-0.447,1-1,1H3   c-0.553,0-1-0.447-1-1V12c0-0.489,0.354-0.906,0.836-0.986l5.444-0.907l1.791-4.478C10.224,5.25,10.591,5,11,5h10   c0.408,0,0.775,0.249,0.928,0.629l1.791,4.478l5.445,0.907C29.646,11.094,30,11.511,30,12V27z" fill="#333333" fillRule="evenodd" />
      </g>
    ),
    viewBox: '0 0 32 32'
  },
  camera3: {
    shape: (
      <g fill="#000000" stroke="none" transform="translate(0.000000,256.000000) scale(0.100000,-0.100000)">
        <path d="M1358 2404 c-45 -42 -156 -146 -245 -232 l-163 -154 -62 37 c-80 48 -129 54 -193 26 -63 -28 -167 -114 -267 -220 -94 -101 -133 -155 -154 -213 -20 -56 -13 -94 31 -169 l36 -62 -43 -46 c-24 -25 -83 -87 -131 -137 -59 -63 -87 -99 -87 -115 0 -102 258 -427 565 -712 230 -214 392 -327 465 -327 31 0 49 15 268 221 101 95 118 107 173 123 215 59 372 223 429 445 9 35 32 65 114 150 175 180 376 405 382 427 22 83 -352 544 -631 779 -186 157 -335 255 -387 255 -9 0 -54 -34 -100 -76z m255 -150 c82 -55 468 -435 566 -557 84 -104 131 -184 131 -222 0 -26 -24 -55 -158 -195 l-159 -165 -12 55 c-7 30 -31 93 -53 140 -119 249 -422 392 -715 337 -124 -24 -204 -66 -295 -157 -120 -119 -182 -265 -194 -455 -12 -177 41 -320 161 -441 81 -81 192 -143 309 -171 l70 -17 -85 -78 c-47 -43 -93 -78 -105 -78 -41 0 -156 87 -346 264 -217 200 -458 507 -458 582 0 9 21 41 48 71 26 30 59 68 73 85 l26 31 47 -82 c51 -89 70 -99 113 -59 40 37 31 68 -77 258 -59 105 -100 187 -100 203 0 47 38 106 128 199 106 110 161 149 217 155 38 5 56 -3 216 -94 96 -55 182 -103 192 -106 26 -9 84 17 92 42 10 34 -10 57 -96 106 l-82 47 24 23 c13 13 98 94 189 180 l165 156 48 -4 c37 -3 65 -16 120 -53z m-88 -766 c245 -80 382 -306 331 -548 -41 -195 -186 -358 -360 -405 -123 -34 -277 -8 -385 64 -158 105 -231 240 -231 425 0 159 41 266 136 357 131 123 330 165 509 107z" />
        <path d="M1396 2105 c-78 -78 -95 -99 -87 -113 5 -9 37 -43 70 -75 l61 -58 44 36 c25 20 70 65 101 101 l57 64 -21 29 c-23 32 -109 111 -121 111 -4 0 -51 -43 -104 -95z" />
        <path d="M1273 1356 c-60 -19 -104 -49 -157 -106 -70 -75 -90 -127 -90 -235 -1 -79 2 -97 27 -146 58 -120 179 -207 301 -216 182 -15 340 110 365 287 22 162 -61 332 -196 400 -58 30 -183 38 -250 16z" />
      </g>
    ),
    viewBox: '0 0 256.000000 256.000000'
  },
  camera4: {
    shape: (
      <>
        <g>
          <path d="M19,20H5c-1.654,0-3-1.346-3-3V9c0-1.654,1.346-3,3-3h1.586l1-1C8.165,4.421,9.182,4,10,4h4c0.818,0,1.835,0.421,2.414,1   l1,1H19c1.654,0,3,1.346,3,3v8C22,18.654,20.654,20,19,20z M5,8C4.448,8,4,8.448,4,9v8c0,0.552,0.448,1,1,1h14c0.552,0,1-0.448,1-1   V9c0-0.552-0.448-1-1-1h-2c-0.266,0-0.52-0.105-0.707-0.293L15,6.414C14.799,6.213,14.285,6,14,6h-4C9.715,6,9.201,6.213,9,6.414   L7.707,7.707C7.52,7.895,7.266,8,7,8H5z" />
        </g>
        <g>
          <path d="M12,10c1.379,0,2.5,1.121,2.5,2.5S13.379,15,12,15s-2.5-1.121-2.5-2.5S10.621,10,12,10 M12,9c-1.934,0-3.5,1.566-3.5,3.5   c0,1.932,1.566,3.5,3.5,3.5s3.5-1.568,3.5-3.5C15.5,10.566,13.934,9,12,9z" />
        </g>
        <g>
          <path d="M18,8.699c-0.719,0-1.3,0.582-1.3,1.301s0.581,1.299,1.3,1.299s1.3-0.58,1.3-1.299S18.719,8.699,18,8.699z" />
        </g>
      </>
    ),
    viewBox: '0 0 24 24'
  },
  aperture: {
    shape: (
      <g>
        <path d="M24.2,39.334L11.422,18.126C8.741,22.09,7.174,26.865,7.174,32c0,2.552,0.388,5.015,1.107,7.334H24.2z" />
        <path d="M29.569,21.474h24.908C51.278,14.67,45.08,9.549,37.595,7.818L29.569,21.474z" />
        <path d="M21.573,29.16L34.424,7.294c-0.798-0.078-1.606-0.12-2.424-0.12c-7.402,0-14.053,3.26-18.605,8.415L21.573,29.16z" />
        <path d="M26.75,56.045l7.862-13.711H9.436c3.302,7.181,9.929,12.524,17.9,14.047L26.75,56.045z" />
        <path d="M39.762,24.474L52.311,46.25c2.841-4.037,4.516-8.95,4.516-14.25c0-2.623-0.412-5.151-1.17-7.526H39.762z" />
        <path d="M42.32,34.923L29.819,56.725c0.719,0.063,1.446,0.101,2.181,0.101c7.234,0,13.753-3.111,18.295-8.064L42.32,34.923z" />
      </g>
    ),
    viewBox: '0 0 64 64'
  },
  aperture2: {
    shape: (
      <g data-name="1" id="_1">
        <path d="M30.49,12.12A15,15,0,1,0,29,23.5,14.91,14.91,0,0,0,30.49,12.12Zm-1.93.52A13.35,13.35,0,0,1,29,15.43l-5,2.88V5.77A12.87,12.87,0,0,1,28.56,12.64ZM10,19.46V12.54l6-3.47,6,3.47v6.92l-6,3.47Zm12-15v5.75L11.13,4A13.18,13.18,0,0,1,16,3,12.81,12.81,0,0,1,22,4.48ZM9,5.05l5,2.87L3.13,14.19A12.84,12.84,0,0,1,9,5.05ZM3,16.56l5-2.87V26.23A13,13,0,0,1,3,16.56Zm7,11V21.77L20.86,28A12.94,12.94,0,0,1,10,27.51ZM23,27l-5-2.88L28.88,17.8A13,13,0,0,1,23,27Z" id="lens_aperture_camera_focus" />
      </g>
    ),
    viewBox: '0 0 32 32'
  },
  triangle: {
    shape: (
      <polygon
        strokeWidth="1px"
        strokeLinejoin="round"
        strokeMiterlimit="10"
        points="14.921,2.27 28.667,25.5 1.175,25.5 "
      />
    ),
    viewBox: '0 0 30 30',
  },
  circle: {
    shape: (
      <path d="M15,30A15,15,0,1,1,30,15,15,15,0,0,1,15,30ZM15,6.23A8.77,8.77,0,1,0,23.77,15,8.77,8.77,0,0,0,15,6.23Z" />
    ),
    viewBox: '0 0 30 30',
  },
  arrowUp: {
    shape: (
      <>
        <path d="M28.74,20.81H1.26a1.26,1.26,0,0,1-1-2L14.16.5a1.25,1.25,0,0,1,1-.5h0a1.24,1.24,0,0,1,1,.51L29.75,18.8a1.25,1.25,0,0,1-1,2ZM3.81,18.29H26.22L15.16,3.37Z" />{' '}
        <path d="M28.74,42H1.26a1.28,1.28,0,0,1-1.13-.71A1.26,1.26,0,0,1,.26,40l13.9-18.29a1.28,1.28,0,0,1,1-.5h0a1.24,1.24,0,0,1,1,.51L29.75,40a1.26,1.26,0,0,1,.12,1.32A1.28,1.28,0,0,1,28.74,42ZM3.81,39.47H26.22L15.16,24.55Z" />
      </>
    ),
    viewBox: '0 0 30 42',
  },
  upDown: {
    shape: (
      <>
        <path d="M28.74,44.58a1.28,1.28,0,0,1-1-.51L15.16,27.13l-12.89,17a1.26,1.26,0,1,1-2-1.53l13.9-18.29a1.34,1.34,0,0,1,1-.5,1.24,1.24,0,0,1,1,.51L29.75,42.56a1.27,1.27,0,0,1-1,2Z" />
        <path d="M14.83,20.82h0a1.28,1.28,0,0,1-1-.52L.25,2a1.27,1.27,0,0,1,2-1.51L14.84,17.45,27.73.5a1.26,1.26,0,0,1,2,1.53L15.84,20.32A1.28,1.28,0,0,1,14.83,20.82Z" />
      </>
    ),
    viewBox: '0 0 30 44.58',
  },
  box: {
    shape: (
      <path d="M28,2V28H2V2H28m.13-2H1.88A1.88,1.88,0,0,0,0,1.88V28.13A1.88,1.88,0,0,0,1.88,30H28.13A1.87,1.87,0,0,0,30,28.13V1.88A1.88,1.88,0,0,0,28.13,0Z" />
    ),
    viewBox: '0 0 30 30',
  },
  hexa: {
    shape: (
      <polygon
        strokeLinejoin="round"
        strokeMiterlimit="10"
        points="27.5,21.904 15,28.809  2.5,21.904 2.5,8.095 15,1.19 27.5,8.095 "
      />
    ),
    viewBox: '0 0 30 30',
  },
}

const SVG = ({ stroke, fill, width, icon, left, top, hiddenMobile }) => (
  <Wrapper
    viewBox={icons[icon].viewBox}
    stroke={stroke}
    fill={fill}
    svgWidth={twWidth[`${width}`]}
    left={left}
    top={top}
    hiddenMobile={hiddenMobile}
  >
    {icons[icon].shape}
  </Wrapper>
)

export default SVG

SVG.propTypes = {
  stroke: PropTypes.string,
  fill: PropTypes.string,
  width: PropTypes.number,
  icon: PropTypes.oneOf(['triangle', 'circle', 'arrowUp', 'upDown', 'box', 'hexa', 'camera2', 'camera3', 'camera4', 'aperture', 'aperture2']).isRequired,
  left: PropTypes.string,
  top: PropTypes.string,
  hiddenMobile: PropTypes.bool,
}

SVG.defaultProps = {
  stroke: 'transparent',
  width: 8,
  fill: 'none',
  left: '0%',
  top: '0%',
  hiddenMobile: false,
}
